{
 ;; Properties
 ;; ==========
 :cldwalker/page-property
 {:query [:find (pull ?things [*])
          :in $ ?region %
          :where
          (page-name-property ?_b ?country :region ?region)
          (page-name-property ?_b2 ?author :country-of-origin ?country)
          (page-name-property ?things ?_name :authored-by ?author)]
  :desc "Practice page property query"
  :default-args ["Middle East"]}

 :cldwalker/has-property-counts
 {:parent :lq/has-property
  :result-transform (fn [result]
                      (->> result
                           (reduce (fn [acc e]
                                     (update-in acc [(get-in e [:block/properties :type])] (fnil inc 0))) {})
                           (sort-by val >)))
  :default-args ["type"]
  :desc "Counts for given property by type"}

 :cldwalker/property
 {:parent :lq/property
  :default-args ["type" "person"]
  :desc "Like :parent but with default args"}

 ;; Misc
 ;; ====
 :cldwalker/page-names
 {:query [:find ?n
          :in $ %
          :where
          [?_b :block/name ?n]]
  :desc "List all page names"}

 ;; Todos
 ;; =====
 :cldwalker/task-all
 {:query [:find (pull ?b
                      [* :block/parent {:block/page [:db/id :block/name]}])
          :in $ %
          :where
          [?b :block/marker ?_marker]]
  :desc "List all tasks"}

 :cldwalker/tasks-by-page
 {:parent :cldwalker/task-all
  :result-transform (fn [result]
                      (->> (update-vals
                            (group-by (fn [x] (get-in x [:block/page :block/name])) result) count)
                           (sort-by val >)))
  :desc "Tasks count by page"}

 :cldwalker/tasks-by-marker
 {:parent :cldwalker/task-all
  :result-transform (fn [result]
                      (update-vals (group-by :block/marker result) count))
  :desc "Tasks count by marker"}

 :cldwalker/tasks-with-urls
 {:query [:find (pull ?b [*])
          :in $ %
          :where
          (task ?b #{"TODO" "DOING"})
          (block-content ?b "https")]
  :desc "Tasks with urls"}

 :cldwalker/tag-tasks
 {:query [:find (pull ?b [* {:block/refs [:db/id :block/name]}])
          :in $ ?tag %
          :where
          (task ?b #{"TODO" "DOING"})
          (page-ref ?b ?tag)]
  :default-args ["eng"]
  :desc "List all tasks for tag"}

 :cldwalker/tag-tasks-tag-counts
 {:parent :cldwalker/tag-tasks
  :result-transform (fn [result]
                      (->> result
                           (mapcat (fn [m] (map :block/name (:block/refs m))))
                           frequencies
                           (sort-by val >)))
  :desc "Counts for tag tasks for tag"}}
