;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{
 ;; Handy command for determining unused vars
 :aliases {:unused-vars
           {:extra-deps {clj-kondo/tools {:git/url "https://github.com/borkdude/clj-kondo"
                                          :sha "1ed3b11025b7f3a582e6db099ba10a888fe0fc2c"
                                          :deps/root "analysis"}}
            :main-opts ["-m" "clj-kondo.tools.unused-vars"]}
           ;; Start a socket repl on port 5555
           :socket {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
           ;; Add reveal to a project, add it as a tap and then tap> to it
           :reveal {:extra-deps {vlaaad/reveal {:mvn/version "0.1.0-ea26"}}}

           :outdated {:extra-deps {antq/antq {:mvn/version "RELEASE"}}
                      :main-opts ["-m" "antq.core"]}

           :carve {:extra-deps {borkdude/carve {:git/url "https://github.com/borkdude/carve"
                                                :sha "af7004dab7000ad7e9c942499f269cf7d21c0728"}}
                   :main-opts ["-m" "carve.main"]}

           :rebl        ;; for JDK 11+
           {:extra-deps {com.cognitect/rebl          {:mvn/version "0.9.241"}
                         org.openjfx/javafx-fxml     {:mvn/version "15-ea+6"}
                         org.openjfx/javafx-controls {:mvn/version "15-ea+6"}
                         org.openjfx/javafx-swing    {:mvn/version "15-ea+6"}
                         org.openjfx/javafx-base     {:mvn/version "15-ea+6"}
                         org.openjfx/javafx-web      {:mvn/version "15-ea+6"}}
            :main-opts ["-m" "cognitect.rebl"]}

           :new {:extra-deps {seancorfield/clj-new {:mvn/version "1.1.228"}}
                 :ns-default clj-new
                 :exec-args {:template "app"}}}

  ;; Paths
  ;;   Directories in the current project to include in the classpath

  ;; :paths ["src"]

  ;; External dependencies

  ;; :deps {
  ;;   org.clojure/clojure {:mvn/version "1.10.0"}
  ;; }

  ;; Aliases
	;;   resolve-deps aliases (-R) affect dependency resolution, options:
	;;     :extra-deps - specifies extra deps to add to :deps
	;;     :override-deps - specifies a coordinate to use instead of that in :deps
	;;     :default-deps - specifies a coordinate to use for a lib if one isn't found
	;;   make-classpath aliases (-C) affect the classpath generation, options:
	;;     :extra-paths - vector of additional paths to add to the classpath
	;;     :classpath-overrides - map of lib to path that overrides the result of resolving deps

  ;; :aliases {
  ;;   :deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.6.496"}}}
  ;;   :test {:extra-paths ["test"]}
  ;; }

  ;; Provider attributes

  ;; :mvn/repos {
  ;;   "central" {:url "https://repo1.maven.org/maven2/"}
  ;;   "clojars" {:url "https://repo.clojars.org/"}
  ;; }
}
