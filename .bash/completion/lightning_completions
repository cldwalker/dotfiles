#### This file was generated by Lightning. ####
#LBIN_PATH="$PWD/bin/" #only use for development
LBIN_PATH="" 
       
#my code directories
c () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path c $@`"
  if [ $1 == '-test' ]; then
    CMD="cd '$FULL_PATH'"
    echo $CMD
  else
    cd "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete c" c


cd-g () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path cd-g $@`"
  if [ $1 == '-test' ]; then
    CMD="cd '$FULL_PATH'"
    echo $CMD
  else
    cd "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete cd-g" cd-g


pb-g () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path pb-g $@`"
  if [ $1 == '-test' ]; then
    CMD="echo -n '$FULL_PATH' |pbcopy"
    echo $CMD
  else
    echo -n "$FULL_PATH" |pbcopy
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete pb-g" pb-g


m-g () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path m-g $@`"
  if [ $1 == '-test' ]; then
    CMD="mate '$FULL_PATH'"
    echo $CMD
  else
    mate "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete m-g" m-g

#open gem's doc in browser
o-g () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path o-g $@`/rdoc/index.html"
  if [ $1 == '-test' ]; then
    CMD="open '$FULL_PATH'"
    echo $CMD
  else
    open "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete o-g" o-g

#access ri documentation limited to this gem
gri () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path gri $@`/ri"
  if [ $1 == '-test' ]; then
    CMD="ri -d '$FULL_PATH' ${@:2}"
    echo $CMD
  else
    ri -d "$FULL_PATH" ${@:2}
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete gri" gri

#ruby core files
v-r () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path v-r $@`"
  if [ $1 == '-test' ]; then
    CMD="vim '$FULL_PATH'"
    echo $CMD
  else
    vim "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete v-r" v-r

#ruby core directories
cd-r () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path cd-r $@`"
  if [ $1 == '-test' ]; then
    CMD="cd '$FULL_PATH'"
    echo $CMD
  else
    cd "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete cd-r" cd-r

#open mac applications
oa () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path oa $@`"
  if [ $1 == '-test' ]; then
    CMD="open -a '$FULL_PATH'"
    echo $CMD
  else
    open -a "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete oa" oa

#open files when in the base directory of a ruby gem project
v-g () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path v-g $@`"
  if [ $1 == '-test' ]; then
    CMD="vim '$FULL_PATH'"
    echo $CMD
  else
    vim "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete v-g" v-g

#open files when in the base directory of a rails project
v-rr () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path v-rr $@`"
  if [ $1 == '-test' ]; then
    CMD="vim '$FULL_PATH'"
    echo $CMD
  else
    vim "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete v-rr" v-rr

#my notes
v-n () {
  if [ -z "$1" ]; then
    echo "No arguments given"
    return
  fi
  FULL_PATH="`${LBIN_PATH}lightning-full_path v-n $@`"
  if [ $1 == '-test' ]; then
    CMD="vim '$FULL_PATH'"
    echo $CMD
  else
    vim "$FULL_PATH"
  fi
}
complete -o default -C "${LBIN_PATH}lightning-complete v-n" v-n
